@using Competitions.Common.Helpers;
@using Competitions.Domain.Entities.Extracurriculars;
@model IEnumerable<ExtracurricularUser>

@{
    Layout = "_AdminLayout";
}
<div class="d-flex align-items-start align-items-sm-center justify-content-between mb-2 flex-column flex-sm-row">
    <h3>لیست ثبت نامی ها</h3>
</div>

<div class="table-overflow card shadow-sm">
    <div class="table ">
        <table class="table text-center" width="100%">
            <thead>
                <tr>
                    <th class="table__row">ردیف</th>
                    <th>نام</th>
                    <th>کد ملی</th>
                    <th>شماره دانشجویی</th>
                    <th>رشته تحصیلی</th>
                    <th>شماره تلفن</th>
                    <th>بیمه ورزشی</th>
                    <th>تاریخ ثبت نام</th>
                    <th>عملیات</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.Count(); i++)
                {
                    <tr>
                        <td>
                            @(i + 1)
                        </td>
                        <td>
                            @Model.ElementAt(i).User.Name @Model.ElementAt(i).User.Family
                        </td>
                        <td>
                            @Model.ElementAt(i).User.NationalCode
                        </td>
                        @if (!String.IsNullOrEmpty(Model.ElementAt(i).User.StudentNumber))
                        {
                            <td>
                                @{
                                    String studentNumber = Model.ElementAt(i).User.StudentNumber == "000000000" ? "ندارد" : Model.ElementAt(i).User.StudentNumber;
                                }
                                @studentNumber
                            </td>
                        }
                        else
                        {
                            <td>ندارد</td>
                        }
                        <td>
                            @{
                                String isStudent = String.IsNullOrEmpty(Model.ElementAt(i).User.College) ? "خارج از دانشگاه" : Model.ElementAt(i).User.College;

                            }
                            @isStudent
                        </td>
                        <td>
                            @(Model.ElementAt(i).User.PhoneNumber != null ? Model.ElementAt(i).User.PhoneNumber.Value : "")
                        </td>
                        <td>
                            @{
                                String insurance = Model.ElementAt(i).Insurance ? "دارد" : String.IsNullOrEmpty(Model.ElementAt(i).Relativity) ? "نامعلوم" : "ندارد";
                            }
                            @insurance
                        </td>
                        <td>
                            @Model.ElementAt(i).JoinTime.ToShamsi()
                        </td>
                        <td>
                            <button type="button" class="btn btn--delete me-2" onclick="Delete('/Extracurriculars/Extracurricular/RemoveStudent?userId=@Model.ElementAt(i).UserId&extId=@Model.ElementAt(i).ExtracurricularId' , '@Model.ElementAt(i).User.Name @Model.ElementAt(i).User.Family از فوق برنامه')"><i class="fa fa-trash"></i></button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>